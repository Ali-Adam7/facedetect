{"version":3,"sources":["components/Logo.js","components/ImageLinkForm.js","components/FaceRec.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","options","max","style","height","width","textAlign","src","ImageLinkForm","onInputChange","onSubmit","name","color","toUpperCase","type","onChange","placeholder","onClick","FaceRec","image","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","App","Clarifai","apiKey","props","calculateLocation","data","Face","JSON","parse","outputs","regions","region_info","bounding_box","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","expression","concepts","console","log","event","input","target","value","state","raw","stringify","fetch","method","headers","body","then","response","text","user","email","json","res","entries","catch","error","onRouteChange","route","signedin","param","display","justifyContent","margin","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.46058a6a.chunk.js","sourcesContent":["import React from 'react'\nimport Tilt from 'react-parallax-tilt';\n\n\n\nconst Logo = () => {\n\n   \n         return(\n        <div className = 'ma4 mt0 tc' >\n        <Tilt className = \"Tilt br shadow-3\" options = {{max:55}} style = {{height:'250px', width : '250px'}}> \n      <div className = \"Tilt-inner pa5\" style = {{textAlign:\"center\"}}>\n      <img src=\"https://img.icons8.com/ios/192/000000/brain--v2.png\"/>      </div>  \n    </Tilt>\n    </div>\n\n    )\n       }\n\nexport default Logo","import React from 'react'\n\nconst ImageLinkForm = ({onInputChange, onSubmit, name}) => {\n    return(\n        <div className = \"tc\">\n        <h3 style = {{color: 'white'}}>{name.toUpperCase()}</h3>\n        <div className = \"pa4 shadow-5 br3\"> \n        <input className = \"f4 pa2 \" type = \"text\"\n        onChange= {onInputChange}\n        placeholder = \"Paste image link here\"\n        ></input>\n        <button\n        onClick = {onSubmit}\n         className = \" grow f4 link ph3 pv2 dib white bg-light-purple\">Detect</button>\n        </div>\n        </div>\n    )\n}\nexport default ImageLinkForm","import React from 'react'\n\nconst FaceRec = ({ image, box}) => {\n    return (\n\n        <div className='face'>\n            <div className=' absolute mt 2 '>\n                <img id=\"inputimg\"\n                    src={image}\n                    width=\"500px\"\n                    height='auto'\n                    className = \"grow\"\n                />\n\n                \n                <div className=\"box\"\n                    style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}>\n\n                </div>\n              \n            </div>\n        </div>\n\n\n    )\n\n}\nexport default FaceRec","import React, { Component } from 'react';\nimport './index.css';\nimport './components/Logo.css'\nimport 'tachyons'\nimport Logo from './components/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm.js'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'\nimport FaceRec from './components/FaceRec'\n\nconst app = new Clarifai.App({\n  apiKey: '0676ebddd5d6413ebdaa101570295a39'\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:'Detect Face',\n      input: '',\n      image: '',\n      box: {},\n      route: 'home',\n    }\n  }\n\n \n  calculateLocation = (data) => {\n    data = JSON.parse(data)\n\n    let Face = data.outputs[0].data.regions[0].region_info.bounding_box\n    let image = document.getElementById('inputimg')\n    let width = Number(image.width);\n    let height = Number(image.height);\n    return {\n\n      leftCol: Face.left_col * width,\n      topRow: Face.top_row * height,\n      rightCol: width - (Face.right_col * width),\n      bottomRow: height - (Face.bottom_row * height)\n\n\n    }\n\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box })\n  }\n\n  expression = (data) =>{\n    data = JSON.parse(data)\n \n    let name = (   data.outputs[0].data.regions[0].data.concepts[0].name);\n    this.setState({\n      name: name\n    })\n    console.log(name)\n  }\n  onInputChange = (event) => {\n    this.setState({\n      input: event.target.value,\n\n    })\n  }\n\n\n  onSubmit = () => {\n\n    this.setState({\n      image: this.state.input\n\n    })\n    console.log(\"submitted\")\n\n\n\n// URL of image to use. Change this to your image.\n\n\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n    \"user_id\": \"clarifai\",\n    \"app_id\": \"main\"\n  },\n  \"inputs\": [\n      {\n          \"data\": {\n              \"image\": {\n                  \"url\": this.state.input\n              }\n          }\n      }\n  ]\n});\n\nconst requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + 'beb7f200cfa7481c8963231c1cf454e4'\n    },\n    body: raw\n};\nfetch(`https://api.clarifai.com/v2/models/celebrity-face-detection/versions/2ba4d0b0e53043f38dbbed49e03917b6/outputs`, requestOptions)   .then(response =>   \n    (response.text())).then((text)=>{\n     this.expression((text))\n     this.displayFaceBox(this.calculateLocation((text)));\n\n     if(this.state.user.name != ''){\n\n       \n      fetch('localhost:80000/img', {\n        method:'put',\n        headers:{'Content-Type':'application/json'},\n        body:JSON.stringify({\n          email:this.state.user.email,\n        })\n      }).then((response) =>{\n        response.json().then((res)=>{\n          this.setState({\n            entries:res\n          })\n        })\n     \n      })\n    }\n\n\n\n    })\n\n    .catch(error => console.log('error', error));\n\n\n\n\n  }\n\n  onRouteChange = (route) => {\n    if(route == 'home'){\n      this.setState({\n        signedin : true\n      })\n    } \n    else {\n      this.setState({\n        signedin : false\n      })\n    \n    }\n    this.setState({\n      route : route\n    })\n\n  }\n  render() {\n\n\n    return (\n\n      <div className=\"App\">\n        <Particles className=\"particles\"\n          param={{\n            \"particles\": {\n              \"number\": {\n                \"value\": 80,\n                \"density\": {\n                  \"enable\": true,\n                  \"value_area\": 800\n                }\n              },\n              \"color\": {\n                \"value\": \"#ffffff\"\n              },\n              \"shape\": {\n                \"type\": \"circle\",\n                \"stroke\": {\n                  \"width\": 0,\n                  \"color\": \"#000000\"\n                },\n                \"polygon\": {\n                  \"nb_sides\": 5\n                },\n                \"image\": {\n                  \"src\": \"img/github.svg\",\n                  \"width\": 100,\n                  \"height\": 100\n                }\n              },\n              \"opacity\": {\n                \"value\": 0.5,\n                \"random\": false,\n                \"anim\": {\n                  \"enable\": false,\n                  \"speed\": 1,\n                  \"opacity_min\": 0.1,\n                  \"sync\": false\n                }\n              },\n              \"size\": {\n                \"value\": 3,\n                \"random\": true,\n                \"anim\": {\n                  \"enable\": false,\n                  \"speed\": 40,\n                  \"size_min\": 0.1,\n                  \"sync\": false\n                }\n              },\n              \"line_linked\": {\n                \"enable\": true,\n                \"distance\": 150,\n                \"color\": \"#ffffff\",\n                \"opacity\": 0.4,\n                \"width\": 1\n              },\n              \"move\": {\n                \"enable\": true,\n                \"speed\": 6,\n                \"random\": true,\n                \"direction\": \"none\",\n                \"bounce\": true,\n                \"out_mode\": \"bounce\",\n                \"attract\": {\n                  \"enable\": false,\n                  \"rotateX\": 600,\n                  \"rotateY\": 1200\n                }\n              }\n\n            },\n            \"interactivity\": {\n              \"detect_on\": \"canvas\",\n              \"events\": {\n                \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"repulse\"\n                },\n                \"onclick\": {\n                  \"enable\": true,\n                  \"mode\": \"push\"\n                },\n                \"resize\": true\n              },\n              \"modes\": {\n                \"grab\": {\n                  \"distance\": 400,\n                  \"line_linked\": {\n                    \"opacity\": 1\n                  }\n                },\n                \"bubble\": {\n                  \"distance\": 400,\n                  \"size\": 40,\n                  \"duration\": 2,\n                  \"opacity\": 8,\n                  \"speed\": 3\n                },\n                \"repulse\": {\n                  \"distance\": 200,\n                  \"duration\": 0.4\n                },\n                \"push\": {\n                  \"particles_nb\": 4\n                },\n                \"remove\": {\n                  \"particles_nb\": 2\n                }\n              }\n            },\n            \"retina_detect\": true,\n\n          }}\n\n        />\n        \n       <div> <div style={{ display: \"flex\", justifyContent: 'center', margin:50}}><Logo name = \"u\" entries = {this.state.entries}/> </div>\n\n\n              <div style={{ display: \"flex\", justifyContent: 'center' }}><ImageLinkForm\n                onSubmit={this.onSubmit}\n                onInputChange={this.onInputChange} \n                name = {this.state.name}/> </div>\n              <FaceRec image={this.state.image} box={this.state.box}/>\n            </div>\n\n            \n            \n      \n\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import App from './App'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}